name: CI/CD pipeline

on:
  workflow_dispatch: # Add this line to enable manual triggering
  pull_request:
    branches:
      - main
  push:
    branches:
      - "*"

permissions: read-all

jobs:
  # trunk-check:
  #   uses: NextGenContributions/cicd-pipeline/.github/workflows/trunk-check.yml@main
  #   # permissions:
  #   #   checks: write # For trunk to post annotations
  #   #   contents: read # For repo checkout
  #   secrets:
  #     TRUNK_TOKEN: ${{ secrets.TRUNK_TOKEN }}
  trunk-check:
    name: Trunk Code Quality Runner
    runs-on: ubuntu-latest
    permissions:
      checks: write # For trunk to post annotations
      contents: read # For repo checkout
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml

      - name: Install the project
        run: UV_PROJECT_ENVIRONMENT=$pythonLocation uv sync --all-extras --dev --frozen --no-install-project

      - name: Trunk Check
        # uses: trunk-io/trunk-action@v1
        uses: NextGenContributions/trunk-action@84978c8e3fd6d558f6fba389bf8858e98dc2a176
        with:
          post-annotations: true
          trunk-token: ${{ secrets.TRUNK_TOKEN }}

  tests:
    uses: NextGenContributions/cicd-pipeline/.github/workflows/test.yml@main
    with:
      project_name: django2pydantic
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      QLTY_COVERAGE_TOKEN: ${{ secrets.QLTY_COVERAGE_TOKEN }}
      TRUNK_TOKEN: ${{ secrets.TRUNK_TOKEN }}

  release:
    uses: NextGenContributions/cicd-pipeline/.github/workflows/release.yml@main
    with:
      release_branch: main
    needs: tests
    permissions:
      id-token: write
      contents: write

  publish-to-testpypi:
    # TODO(phuongfi91): Revisit this once Reusable Workflow is supported for Trusted Publishing
    #  Ref: https://github.com/pypi/warehouse/issues/11096
    #  Workflow: NextGenContributions/cicd-pipeline/.github/workflows/publish-pypi.yml@main
    name: Publish Python üêç distribution üì¶ to TestPyPI
    runs-on: ubuntu-latest
    if: ${{ needs.release.outputs.released == 'true' }}
    needs:
      - release
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    environment:
      name: testpypi
      url: ${{ format('https://test.pypi.org/p/{0}', 'django2pydantic') }}

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution üì¶ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
