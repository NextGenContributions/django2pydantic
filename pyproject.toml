[project]
name = "django2pydantic"
version = "0.3.0"
description = "Converting Django models to Pydantic models"
readme = "README.md"
requires-python = "==3.12.*"
authors = [{ name = "Jukka Hassinen", email = "jukka.hassinen@gmail.com" }]
license = "MIT"
keywords = ["django", "pydantic", "models", "schema", "converter"]

classifiers = [
    "License :: OSI Approved :: MIT License",
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Programming Language :: Python :: 3.12",
    "Framework :: Django :: 5.1",
    "Framework :: Pydantic :: 2",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

dependencies = ["django>=5.1.3", "pydantic>=2.9.2", "django-stubs-ext>=5.1.1"]


[project.urls]
Homepage = "https://github.com/NextGenContributions/django2pydantic"
Documentation = "https://github.com/NextGenContributions/django2pydantic/blob/main/README.md"
Repository = "https://github.com/NextGenContributions/django2pydantic.git"
Issues = "https://github.com/NextGenContributions/django2pydantic/issues"
Changelog = "https://github.com/NextGenContributions/django2pydantic/blob/main/CHANGELOG.md"
"Release Notes" = "https://github.com/NextGenContributions/django2pydantic/releases"
Funding = "https://github.com/sponsors/NextGenContributions"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
only-include = ["django2pydantic"]

[dependency-groups]
dev = [
    "basedpyright>=1.21.0",
    "beartype>=0.19.0",
    "debugpy>=1.8.8",
    "django-ninja>=1.3.0",
    "django-stubs[compatible-mypy]>=5.1.1",
    "email-validator>=2.2.0",
    "hypothesis>=6.118.0",
    "import-linter>=2.1",
    "ipykernel>=6.29.5",
    "isort>=5.13.2",
    "mypy>=1.13.0",
    "ninja-schema>=0.13.6",
    "nox>=2024.10.9",
    "pre-commit>=4.1.0",
    "pylint>=3.3.4",
    "pylint-django>=2.6.1",
    "pyre-check>=0.9.23",
    "pyright>=1.1.388",
    "pytest>=8.3.3",
    "pytest-cov>=6.0.0",
    "pytest-django>=4.9.0",
    "pytest-instafail>=0.5.0",
    "pytest-testmon>=2.1.1",
    "pytest-watch>=4.2.0",
    "pytype>=2024.10.11",
    "rich>=13.9.4",
    "ruff>=0.7.3",
    "typeguard>=4.4.1",
    "wemake-python-styleguide>=1.0.0",
    "python-semantic-release>=9.14.0",
    "semgrep>=1.85.0",
    "project-config>=0.9.7",
    "taplo>=0.9.3",
    "nitpick",
    "django-stubs-ext>=5.1.1",
]

[tool.uv.sources]
nitpick = { git = "https://github.com/NextGenContributions/nitpick", branch = "develop-ng" }

[tool.semantic_release]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"
version_toml = ["pyproject.toml:project.version"]
version_variables = [
    "django2pydantic/__init__.py:__version__",
    "uv.lock:\"django2pydantic\"\\nversion",
]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = [
    '''chore(?:\([^)]*?\))?: .+''',
    '''ci(?:\([^)]*?\))?: .+''',
    '''refactor(?:\([^)]*?\))?: .+''',
    '''style(?:\([^)]*?\))?: .+''',
    '''test(?:\([^)]*?\))?: .+''',
    '''build\((?!deps\): .+)''',
    '''Merged? .*''',
    '''Initial Commit.*''',
    # Old semantic-release version commits
    '''^\d+\.\d+\.\d+''',
]
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
allowed_tags = [
    "feat",
    "fix",
    "perf",
    "build",
    "chore",
    "ci",
    "docs",
    "style",
    "refactor",
    "test",
]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
